Class - The class is the factory and the blueprint for an instance
Instance - A constructed object of the class
Type - Indicates the class to which the instance belongs to
Attribute - Any object value: object.Attribute
Method - A "callable attribute" defined in the class

* Classes are "instance factories"
* Classes define an "instance blueprint"
* Instances know to which class they belong ("type")
* Instances can access variables defined in the class
* Object - An object is a unit of data (having one or more attributes), of a particular class or type with associated functionality (methods).
* Self - self is the instance upon which the method was called

6 Points to Understanding Classes
---------------------------------
1) An instance of a class knows what class it's from
2) Vars defined in the class are available to the instance
3) A method on an instance passes instance as the first argument to the method (named self in the method)
4) Instances have their own data called instance attributes
5) Variables defined in the class are called class attributes
6) When we read an attribute, Python looks for it first in the instance, and then the class

* Instance methods are variables defined in the class
* They are accessed through the instance: instance.method()
* When called through the instance, the instance is automatically passed as 1st argument to the method
* Bound Methods: Because of this automatic passing of instance, instance methods are called bound methods
* Instance data takes the form of instance attribute values, set and accessed through object.attribute syntax


3 Pillars of OOP
1) Encapsulation - Ensures the integrity of the data in the object by using setter and getter methods.
2) Inheritance - Inheritance refers to a new feature that we'll look at now the ability to have one class inherit the attributes of another class.
3) Polymorphism

Object.Attribute Lookup Hierarchy
1) In the instance
2) In the class
3) Any class from which this class inherits

* An inheriting class - Child class / Derived class / Subclass
* An inherited class - Parent class / Base class / Superclass

